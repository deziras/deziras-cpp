//
// Created by Glavo on 17-9-30.
//

#pragma clang diagnostic push
#pragma ide diagnostic ignored "OCUnusedGlobalDeclarationInspection"
#ifndef DEZIRAS_EXCEPTION_H
#define DEZIRAS_EXCEPTION_H

#include <cstdlib>

namespace std {
    class exception {
    public:
        exception() noexcept = default;

        exception(exception const &) noexcept = default;

        exception &operator=(exception const &) noexcept = default;

        virtual ~exception() = default;

        virtual char const *what() const noexcept;
    };

    class bad_exception : public exception {
    public:
        bad_exception() noexcept = default;

        bad_exception(bad_exception const &) noexcept = default;

        bad_exception &operator=(bad_exception const &) noexcept = default;

        virtual char const *what() const noexcept override;
    };

    using unexpected_handler = void (*)();

    unexpected_handler get_unexpected() noexcept;

    unexpected_handler set_unexpected(unexpected_handler f) noexcept;

    [[noreturn]] void unexpected();


    using terminate_handler  = void (*)();

    terminate_handler get_terminate() noexcept;

    terminate_handler set_terminate(terminate_handler f) noexcept;

    [[noreturn]] void terminate() noexcept;

    int uncaught_exceptions() noexcept;

    bool uncaught_exception() noexcept;

}

#endif //DEZIRAS_EXCEPTION_H

#pragma clang diagnostic pop