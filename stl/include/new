//
// Created by Glavo on 17-9-29.
//

#ifndef DEZIRAS_NEW_H
#define DEZIRAS_NEW_H

#include <cstddef>
#include <exception>

namespace std {
    class bad_alloc : public exception {
    public:
        bad_alloc() noexcept = default;

        bad_alloc(bad_alloc const &) noexcept = default;

        virtual char const *what() const noexcept override {
            return "std::bad_alloc";
        }
    };

    struct nothrow_t {
        explicit nothrow_t() = default;
    };

    extern const nothrow_t nothrow;

    using new_handler = void (*)();

}

void *operator new(size_t);

void *operator new[](size_t);

void operator delete(void *);

void operator delete[](void *);


void *operator new(size_t, std::nothrow_t &) noexcept;

void *operator new[](size_t, std::nothrow_t &) noexcept;

void operator delete(void *, std::nothrow_t &) noexcept;

void operator delete[](void *, std::nothrow_t &) noexcept;

#endif //DEZIRAS_NEW_H

