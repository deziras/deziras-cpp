#pragma once

#include <cstddef>
#include <exception>
#include "cstdint"

namespace std {
    class type_info {
        type_info(type_info const &rhs) = delete;

        type_info &operator=(type_info const &rhs) = delete;

    protected:
        char const *type_name;

        explicit type_info(const char *__n) : type_name(__n) {}

        type_info() = default;

    public:
        virtual ~type_info() = default;

        bool operator==(type_info const &) const noexcept;

        bool operator!=(type_info const &) const noexcept;

        bool before(type_info const &rhs) const noexcept;

        size_t hash_code() const noexcept;

        char const *name() const noexcept;

    };
}

